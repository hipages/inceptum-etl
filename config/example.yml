app:
  name: Example Etl
  validEtls:
    - etl_1_name
    - etl_2_name

generalConfig:
  source:
    maxRetries: 3
    timeoutMillis: 5000
  transformer:
    minSuccessPercentage: 1
    timeoutMillis: 5000
  destination:
    maxRetries: 3
    timeoutMillis: 5000
    batchSize: 1

etls:  
  etl_1_name:
    source:
      type: adwordsclicks
      account: hip
      token: HIP_ADWORDS_TOKEN
      userAgent: my_app_adwords
      clientCustomerId:  HIP_ADWORDS_CUSTOMER_ID
      clientId: HIP_ADWORDS_CLIENT_ID
      clientSecret: HIP_ADWORDS_CLIENT_SECRET
      refreshToken: HIP_ADWORDS_REFRESH_TOKEN
      version: v201705
      accountsList:
        - name: account name
          id: account_id
    transformer:
      type: splitadwordscampaign
      fixedFields:
        app_code: HIP
        source_name: Adwords
        source_account: hip
        record_created_date: '2017-08-23 10:30:45'
        source_time_zone: '(GMT+10:00) Eastern Time - Melbourne, Sydney'
      fieldsRequiringMapping:
        keyword_placement: keyword__placement
    destination:
      type: csvfile
      directory: path/to/directory
      fileName: base_file_name
      cleanUpDirectory : false # clean the directory before writing
    savepoint:
      type: mysql
      dbClient: EtlSavePoint

  etl_2_name:
    source:
      type: mysqldatabykey
      dbClient: SEO
      sourceOptions:
        tableName: landing_pages_table
        searchColumn: id  
        searchColumnDataType: number
        pk: id  
    transformer:
      type: simplecopy
      available: true
    destination:
      type: jsonfile
      directory: path/to/directory
      fileName: base_file_name
      cleanUpDirectory : false # clean the directory before writing
    savepoint:
      type: static
      savepoint: '{"startDate":"20170731","endDate":"20170801","currentBatch":1,"totalBatches":1,"currentDate":"2017-08-01T01:14:37.995Z"}'

# Default definitions
sources:
  adwordsclicks:
    account: hip
    token: HIP_ADWORDS_TOKEN
    userAgent: my_app_adwords
    clientCustomerId:  HIP_ADWORDS_CUSTOMER_ID
    clientId: HIP_ADWORDS_CLIENT_ID
    clientSecret: HIP_ADWORDS_CLIENT_SECRET
    refreshToken: HIP_ADWORDS_REFRESH_TOKEN
    version: v201705
    accountsList:
      - name: account name
        id: account_id

transformers:
  splitadwordscampaign:
    fixedFields:
      app_code: HIP
      source_name: Adwords
      source_account: hip
      record_created_date: '2017-08-23 10:30:45'
      source_time_zone: '(GMT+10:00) Eastern Time - Melbourne, Sydney'
    fieldsRequiringMapping:
      keyword_placement: keyword__placement
  simplecopy:
    available: true
 
destinations:
  csvfile:
    directory: path/to/directory
    fileName: base_file_name
    cleanUpDirectory : false # clean the directory before writing
  jsonfile:
    directory: path/to/directory
    fileName: base_file_name
    cleanUpDirectory : # clean the directory before writing
  s3bucket:
    fileType: json | csv
    bucket: bucket/name
    tempDirectory: ETL_TEMP_DIR
    fileName: base_file_name
  redshift:
    dbClient: dwRedshift
    bucket: bucket/name # use S3 file to upload data to redshift
    tempDirectory: ETL_TEMP_DIR
    tableCopyName: temp table to use to copy data
    tableName: final table
    bulkDeleteMatchFields: # list of the "unique key" fields 
      - field_one 
      - field_one
    iamRole: # required if redshift doesn't have permission to access S3

savepoints:
  mysql:
    dbClient: EtlSavePoint
  static:
    savepoint: '{"startDate":"20170731","endDate":"20170801","currentBatch":1,"totalBatches":1,"currentDate":"2017-08-01T01:14:37.995Z"}'

postgres:
  dwRedshift:   # reference name for redshift database
    master:
      max: DW_RW_MAX
      min: DW_RW_MIN
      maxWaitingClients: 10
      testOnBorrow: false
      acquireTimeoutMillis: 2000
      evictionRunIntervalMillis: 30000
      numTestsPerRun: 3
      idleTimeoutMillis: 30000
      refreshIdle: true
      ssl: true
      connectionConfig:    
        user: DW_RW_USER
        database: DW_RW_DB
        password: DW_RW_PASS
        port: DW_RW_PORT
        host: DW_RW_HOST 
        application_name: DW_RW_APP_NAME
    slave:
      max: DW_RO_MAX
      min: DW_RO_MIN
      maxWaitingClients: 10
      testOnBorrow: false
      acquireTimeoutMillis: 2000
      evictionRunIntervalMillis: 30000
      numTestsPerRun: 3
      idleTimeoutMillis: 30000
      refreshIdle: true
      ssl: true
      connectionConfig:      
        user: DW_RO_USER
        database: DW_RO_DB
        password: DW_RO_PASS
        port: DW_RO_PORT
        host: DW_RO_HOST
        application_name: DW_RO_APP_NAME

mysql:
  EtlSavePoint: # reference name for savepoint  database
    master:
      max: 10
      min: 1
      maxWaitingClients: 10
      testOnBorrow: false
      acquireTimeoutMillis: 2000
      evictionRunIntervalMillis: 30000
      numTestsPerRun: 3
      idleTimeoutMillis: 30000
      connectionConfig:    
        host: HIP_RW_HOST
        port: HIP_RW_PORT
        user: HIP_RW_USER
        password: HIP_RW_PASS
        database: HIP_RW_DB
        charset: utf8
    slave:
      max: 10
      min: 1
      maxWaitingClients: 10
      testOnBorrow: false
      acquireTimeoutMillis: 2000
      evictionRunIntervalMillis: 30000
      numTestsPerRun: 3
      idleTimeoutMillis: 30000
      connectionConfig:      
        host: HIP_RO_HOST
        port: HIP_RO_PORT
        user: HIP_RO_USER
        password: HIP_RO_PASS
        database: HIP_RO_DB
        charset: utf8
        connectionLimit: 10

logging:
  streams:
    console:
      type: console
    myredis:
      type: redis
    mainLogFile:
      type: file
      path: main.log
  loggers:
    - name: ROOT
      streams:
        console: debug
#        myredis: info
#        mainLogFile: debug
    - name: ioc/
      streams:
        console: debug
#        myredis: info
    - name: mysql/
      streams:
        console: debug
#        myredis: info

Context:
  ActiveProfiles: example
